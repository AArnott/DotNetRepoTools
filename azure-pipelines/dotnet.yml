parameters:
- name: RunTests
  type: boolean
  default: true
- name: SignArtifacts
  type: boolean
  default: false

steps:

- script: dotnet build -t:build,pack --no-restore -c $(BuildConfiguration) -warnAsError -warnNotAsError:NU1901,NU1902,NU1903,NU1904 /bl:"$(Build.ArtifactStagingDirectory)/build_logs/build.binlog"
  displayName: üõ† dotnet build

- powershell: tools/dotnet-test-cloud.ps1 -Configuration $(BuildConfiguration) -Agent $(Agent.JobName) -PublishResults
  displayName: üß™ dotnet test
  condition: and(succeeded(), ${{ parameters.RunTests }})

- powershell: tools/variables/_define.ps1
  failOnStderr: true
  displayName: ‚öô Update pipeline variables based on build outputs
  condition: succeededOrFailed()

- ${{ if eq(parameters.SignArtifacts, 'true') }}:
  - powershell: azure-pipelines/artifacts/_pipelines.ps1 -ArtifactNameSuffix "-$(Agent.JobName)" -Verbose -StageOnly
    failOnStderr: true
    displayName: üóÉÔ∏è Stage artifacts
    condition: succeededOrFailed()

  - pwsh: >
      dotnet tool install --tool-path obj SignClient

      obj/SignClient sign
      --baseDirectory '$(Build.ArtifactStagingDirectory)/deployables-$(Agent.JobName)'
      --input '**/*'
      --config '$(System.DefaultWorkingDirectory)/azure-pipelines/SignClient.json'
      --filelist '$(System.DefaultWorkingDirectory)/azure-pipelines/signfiles.txt'
      --user '$(codesign_username)'
      --secret '$(codesign_secret)'
      --name 'DotNetRepoTools'
      --descriptionUrl 'https://github.com/AArnott/DotNetRepoTools'
    displayName: üîè Code sign
    condition: and(succeeded(), eq(variables['System.TeamFoundationCollectionUri'], 'https://dev.azure.com/andrewarnott/'), ne(variables['Build.Reason'], 'PullRequest'))

- powershell: azure-pipelines/publish_artifacts.ps1 -ArtifactNameSuffix "-$(Agent.JobName)" -Verbose
  failOnStderr: true
  displayName: üì¢ Publish artifacts
  condition: succeededOrFailed()

- ${{ if and(ne(variables['codecov_token'], ''), parameters.RunTests) }}:
  - powershell: |
      $ArtifactStagingFolder = & "tools/Get-ArtifactsStagingDirectory.ps1"
      $CoverageResultsFolder = Join-Path $ArtifactStagingFolder "coverageResults-$(Agent.JobName)"
      tools/publish-CodeCov.ps1 -CodeCovToken "$(codecov_token)" -PathToCodeCoverage "$CoverageResultsFolder" -Name "$(Agent.JobName) Coverage Results" -Flags "$(Agent.JobName)"
    displayName: üì¢ Publish code coverage results to codecov.io
    timeoutInMinutes: 3
    continueOnError: true
